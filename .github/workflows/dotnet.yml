# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run the Publish
      run: dotnet publish --configuration Release --no-restore --output ./publish
    
    - name: Rename _app_offline.htm back to app_offline.htm to stop the site
      shell: python
      run: |
        import ftplib
        ftp = ftplib.FTP('${{ secrets.FTP_HOST }}')
        ftp.login('${{ secrets.FTP_USER }}', '${{ secrets.FTP_PASSWORD }}')
        ftp.rename('/api/_app_offline.htm', '/api/app_offline.htm')
        ftp.quit()
    
    - name: FTP-Deploy-Action
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: "/home/runner/work/t-board-backend/t-board-backend/publish/"
        remote-dir: "/api/"
        
    - name: Rename app_offline.htm back to _app_offline.htm to start the site
      shell: python
      run: |
        import ftplib
        ftp = ftplib.FTP('${{ secrets.FTP_HOST }}')
        ftp.login('${{ secrets.FTP_USER }}', '${{ secrets.FTP_PASSWORD }}')
        ftp.rename('/api/app_offline.htm', '/api/_app_offline.htm')
        ftp.quit()
